import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws IOException {
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    	StringBuilder ans = new StringBuilder();
		int N = Integer.parseInt(br.readLine());
		int[][] dp = new int[N + 1][10];
		for (int i = 1; i <= 9; i++) dp[1][i] = 1;
		for (int i = 2; i <= N; i++) {
			dp[i][0] = dp[i-1][1];
			for (int j = 1; j <= 8; j++) {
				dp[i][j] = dp[i-1][j-1] + dp[i-1][j + 1];
				if (dp[i][j] >= 1000000000) dp[i][j] %= 1000000000;
 			}
			dp[i][9] = dp[i-1][8];
		}
		int cnt = 0;
		for (int i = 0; i <= 9; i++) {
			cnt = cnt + dp[N][i];
			if (cnt >= 1000000000) cnt %= 1000000000;
		}
		ans.append(cnt);
    	bw.write(ans.toString());
    	br.close();
    	bw.close();
    }
}

/*
[n = 1]
1 2 3 4 5 6 7 8 9
dp[n] = 9 // dpEndZeroOrNine[n] = 1 // dpEndOneOrEight[n] = 2
1 2 3 4 5 6 7 8 9
[0, 9] 9
[1, 8] 1 8

[n = 2]
10 12 21 23 32 34 43 45 54 56 65 67 76 78 87 89 98
dp[n] = 17 // dpEndZeroOrNine[n] = 2 // dpEndOneOrEight[n] = 3
10 21 32 43 54 65 76 87 98
12 23 34 45 56 67 78 89
[0, 9] 10 89
[1, 8] 21 78 98

[n = 3]
101 121 123 210 212 232 234 321 323 343 345 432 434 454 456 543 545 565 567 654 656 676 678 765 767 787 789 876 878 898 987 989
dp[n] = 32  // dpEndZeroOrNine[n] = 3 // dpEndOneOrEight[n] = 6
101 121 210 232 321 343 432 454 543 565 654 676 765 787 876 898 987
    123 212 234 323 345 434 456 545 567 656 678 767 789 878     989
[0, 9] 210 789 989
[1, 8] 101 121 321 678 878 898

[n = 4]
1010 1012 1210 1212 1232 1234 2101 2121 2123 2321 2323 2343 2345 3210 3212 3232 3234 3432 3434 3454 3456 4321 4323 4343 4345 4543 4545 4565 4567 5432 5432 5454 5456 5654 5657 5676 5678 6543 6545 6565 6567 6765 6767 6787 6789 7654 7656 7676 7678 7876 7878 7898 8765 8767 8787 8789 8987 8989 9876 9878 9898
dp[n] = 61 // dpEndZeroOrNine[n] = 6 // dpEndOneOrEight[n] = 10
1010 1210 1232      2121 2321 2343 3210 3232 3432 3454 4321 4343 4543 4565 5432 5454 5654 5676 6543 6565 6765 6787 7654 7676 7876 7898 8765 8787 8987 9876 9898
1012 1212 1234 2101 2123 2323 2345 3212 3234 3434 3456 4323 4345 4545 4567 5432 5456 5657 5678 6545 6567 6767 6789 7656 7678 7878      8767 8789 8989 9878
[0, 9] 1010 1210 3210 6789 8789 8989
[1, 8] 2101 2121 2321 4321 5678 7678 7878 9878

[n = 5]
10121 12121 12321 12343 21010 21210 21232 23210 23232 23432 23454 32121 32321 32343 34321 34343 34543 34565 43210 43232 43432 43454 45432 45454 45654 45676 54321 54321 54543 54565 56543 56576 56765 56787 65432 65454 65654 65676 67654 67676 67876 67898 76543 76565 76765 76787 78765 78787 78987 87654 87676 87876 87898 89876 89898 98765 98787 98987 10101 10123 12101 12123 12323 12345 21012 21212 21234 23212 23234 23434 23456 32101 32123 32323 32345 34323 34345 34545 34567 43212 43234 43434 43456 45434 45456 45656 45678 54323 54323 54545 54567 56545 56578 56767 56789 65434 65456 65656 65678 67656 67678 67878 76545 76567 76767 76789 78767 78789 78989 87656 87678 87878 89878 98767 98789 98989
dp[n] = 116 // dpEndZeroOrNine[n] = 10 // dpEndOneOrEight[n] = 22
      10121       12121 12321 12343 21010 21210 21232 23210 23232 23432 23454       32121 32321 32343 34321 34343 34543 34565 43210 43232 43432 43454 45432 45454 45654 45676 54321 54321 54543 54565 56543 56576 56765 56787 65432 65454 65654 65676 67654 67676 67876 67898 76543 76565 76765 76787 78765 78787 78987 87654 87676 87876 87898 89876 89898 98765 98787 98987
10101 10123 12101 12123 12323 12345 21012 21212 21234 23212 23234 23434 23456 32101 32123 32323 32345 34323 34345 34545 34567 43212 43234 43434 43456 45434 45456 45656 45678 54323 54323 54545 54567 56545 56578 56767 56789 65434 65456 65656 65678 67656 67678 67878       76545 76567 76767 76789 78767 78789 78989 87656 87678 87878       89878       98767 98789 98989
[0, 9] 21010 21210 23210 43210 56789 76789 78789 98789
[1, 8] 10101 10121 12101 12121 12321 32101 32121 32321 34321 54321 54321 45678 56578 65678 67678 67878 67898 87678 87878 87898 89878 89898

 */

// dpEndZeroOrNine 1 2 3 6 10
// dpEndOneOrEight 2 3 6 10 22